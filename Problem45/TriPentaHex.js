// Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

// Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
// Pentagonal	 	Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
// Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
// It can be verified that T285 = P165 = H143 = 40755.

// Find the next triangle number that is also pentagonal and hexagonal.

const isPentagonal = (number) => {
    let solution1 =
        (-1 * -1 + Math.sqrt((-1) ** 2 - 4 * 3 * 2 * -1 * number)) / (2 * 3);
    let solution2 =
        (-1 * -1 - Math.sqrt((-1) ** 2 - 4 * 3 * 2 * -1 * number)) / (2 * 3);

    if (
        (solution1 > 0 && Number.isInteger(solution1)) ||
        (solution2 > 0 && Number.isInteger(solution2))
    ) {
        return true;
    } else return false;
};

const isHexagonal = (number) => {
    let solution1 =
        (-1 * -1 + Math.sqrt((-1) ** 2 - 4 * 2 * -1 * number)) / (2 * 2);
    let solution2 =
        (-1 * -1 - Math.sqrt((-1) ** 2 - 4 * 2 * -1 * number)) / (2 * 2);
    if (
        (solution1 > 0 && Number.isInteger(solution1)) ||
        (solution2 > 0 && Number.isInteger(solution2))
    ) {
        return true;
    } else return false;
};

const generateTrinumber = () => {
    let foundTriNum = true;
    let n = 286;
    while (foundTriNum) {
        let triNum = (n * (n + 1)) / 2;
        if(isPentagonal(triNum) && isHexagonal(triNum)){
            foundTriNum = false
            console.log(triNum)
            return triNum
        }
        n++
    }
};
// generateTrinumber()
